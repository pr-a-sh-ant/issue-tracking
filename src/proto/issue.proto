syntax = "proto3";

package issue;

service IssueService {
    rpc CreateIssue (CreateIssueRequest) returns (CreateIssueResponse);
    rpc GetIssue (GetIssueRequest) returns (GetIssueResponse);
    rpc AssignIssue (AssignIssueRequest) returns (AssignIssueResponse);
    rpc ListIssuesByUser (ListIssuesRequest) returns (ListIssuesResponse);
    rpc ListIssues (ListIssuesRequest) returns (ListIssuesResponse);
    rpc UpdateIssueDetails (UpdateIssueDetailsRequest) returns (UpdateIssueDetailsResponse);
    rpc UpdateIssuePriorityImpact (UpdateIssuePriorityImpactRequest) returns (UpdateIssuePriorityImpactResponse);
    rpc ResolveIssue (ResolveIssueRequest) returns (ResolveIssueResponse);
    rpc UploadAttachment(UploadAttachmentRequest) returns (UploadAttachmentResponse);
    rpc DashboardIssues (DashboardIssuesRequest) returns (DashboardIssuesResponse);
    rpc DeleteIssue(DeleteIssueRequest) returns (DeleteIssueResponse);
}

message DeleteIssueRequest {
    string issueId = 1;
}

message DeleteIssueResponse {
    string message = 1;
}

message DashboardIssuesRequest {
}

message DashboardIssuesResponse {
    string message = 1;
    string newIssues = 2;
    string ackIssues = 3;
    string closedIssues = 4; // issues that are resolved and closed
    repeated string list = 5; // List of dates when issues were created
}

message UploadAttachmentRequest {
    string file_name = 1;
    string file_path = 2;
    string issue_id = 3;
    string created_by = 4;
}

message UploadAttachmentResponse {
    string message = 1;
}

message ListAttachmentsRequest {
    string issue_id = 1;
}

message ListAttachmentsResponse {
    repeated Attachment attachments = 1;
    string message = 2;
}

message Attachment {
    string id = 1;
    string file_name = 2;
    string file_path = 3;
    string created_by = 4;
    string created_at = 5;
    string issue_id = 6;
}

enum StatusEnum {
    NEW = 0;
    ACK = 1;
    RESOLVED = 2;
    CLOSED = 3;
}

enum UrgencyEnum {
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
}

enum ImpactEnum {
    LOW = 0;
    MEDIUM = 1;
    HIGH = 2;
}

message CreateIssueRequest{
    string title = 1;
    string description = 2;
    UrgencyEnum urgency = 3;
    ImpactEnum impact = 4;
}

message CreateIssueResponse {
    string message = 1;
    string issueId = 2;
}

message GetIssueRequest {
    string issueId = 1;
}

message GetIssueResponse {
    Issue Issue = 1;
    repeated Comment comments = 2;
    repeated Attachment attachments = 3;
    repeated SubTask subTasks = 4;
    string message = 5;
}

message SubTask {
    string subTaskId = 1;
    string task = 2;
    string status = 3;
    string issueId = 4;
    string createdBy = 5;
    string createdAt = 6;
    string updatedAt = 7;
}

message Comment {
    string id = 1;
    string content = 3;
    string userName = 4;
    string parentId = 5;
    string created_at = 6;
}

message Issue {
    string issue_id = 1;
    string title = 2;
    string description = 3;
    StatusEnum status = 4;
    UrgencyEnum urgency = 5;
    ImpactEnum impact = 6;
    string created_by = 7;
    string admin_id = 8;
    string created_at = 9;
    string updated_at = 10;
    string priority = 11;
}

message ListIssuesRequest{
    string page = 1;
    string limit = 2;
    string priority = 3; // Optional filter by priority
    string status = 4; // Optional filter by status
}

message IssueShort {
    string issue_id = 1;
    string title = 2;
    StatusEnum status = 3;
    string priority = 4;
    ImpactEnum impact = 5;
    string created_by = 6;
    string created_at = 7;
}

message ListIssuesResponse {
    repeated IssueShort issues = 1;
    string message = 2;
}

message AssignIssueRequest {
    string issueId = 1;
}

message AssignIssueResponse {
    string message = 1;
    string status = 2;
    string issueId = 3;
}

message UpdateIssueDetailsRequest {
  string issueId = 1;
  string description = 2;
}

message UpdateIssueDetailsResponse {
  string message = 1;
}

message UpdateIssuePriorityImpactRequest {
  string issueId = 1;
  string priority = 2;
  ImpactEnum impact = 3;
  UrgencyEnum urgency = 4;
}

message UpdateIssuePriorityImpactResponse {
  string message = 1;
}

message ResolveIssueRequest {
  string issueId = 1;
  StatusEnum resolution = 2; // e.g. "Resolved" and "Closed"
}

message ResolveIssueResponse {
  string message = 1;
}


